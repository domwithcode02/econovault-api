AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS WAF Configuration for EconoVault Financial API - Production Security'

Parameters:
  Environment:
    Type: String
    Default: production
    AllowedValues: [development, staging, production]
    Description: "Environment name for resource naming"
  
  VPCId:
    Type: AWS::EC2::VPC::Id
    Description: "VPC ID where the ALB is deployed"
  
  ALBArn:
    Type: String
    Description: "ARN of the Application Load Balancer"
  
  AllowedCountries:
    Type: CommaDelimitedList
    Default: "US,CA,GB,AU,JP,DE,FR,NL,CH,SE"
    Description: "Comma-separated list of allowed country codes for financial compliance"
  
  PartnerIPRanges:
    Type: CommaDelimitedList
    Default: "203.0.113.0/24,198.51.100.0/24,192.0.2.0/24"
    Description: "IP ranges of trusted financial partners"
  
  RateLimitThreshold:
    Type: Number
    Default: 2000
    Description: "Rate limit threshold per 5 minutes per IP"
  
  EnableBotControl:
    Type: String
    Default: "true"
    AllowedValues: ["true", "false"]
    Description: "Enable AWS Bot Control managed rule group"
  
  ProtectionLevel:
    Type: String
    Default: "advanced"
    AllowedValues: ["minimal", "basic", "standard", "advanced"]
    Description: "Protection level affecting cost and security features"

Conditions:
  IsProduction: !Equals [!Ref Environment, production]
  IsAdvancedProtection: !Or [!Equals [!Ref ProtectionLevel, advanced], !Equals [!Ref ProtectionLevel, standard]]
  EnableBotControl: !Equals [!Ref EnableBotControl, "true"]

Resources:
  # WAF Web ACL with Financial API Protection
  FinancialAPIWebACL:
    Type: AWS::WAFv2::WebACL
    Properties:
      Name: !Sub "econovault-waf-${Environment}"
      Scope: REGIONAL
      Description: "WAF for EconoVault Financial API protection"
      DefaultAction:
        Allow: {}
      Rules:
        # Rate limiting for DDoS protection (Priority 1)
        - Name: "RateLimitRule"
          Priority: 1
          Statement:
            RateBasedStatement:
              Limit: !Ref RateLimitThreshold
              AggregateKeyType: IP
              ScopeDownStatement:
                ByteMatchStatement:
                  SearchString: "/api/"
                  FieldToMatch:
                    UriPath: {}
                  TextTransformations:
                    - Priority: 0
                      Type: LOWERCASE
          Action:
            Block: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: !Sub "RateLimitRule-${Environment}"
        
        # AWS Managed Rules - Core Rule Set (Priority 2)
        - Name: "AWSManagedRulesCommonRuleSet"
          Priority: 2
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesCommonRuleSet
              ExcludedRules:
                - Name: "SizeRestrictions_BODY"
                  # Excluded for large financial document uploads
          OverrideAction:
            None: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: !Sub "CommonRuleSet-${Environment}"
        
        # SQL Injection Protection (Priority 3)
        - Name: "AWSManagedRulesSQLiRuleSet"
          Priority: 3
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesSQLiRuleSet
          OverrideAction:
            None: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: !Sub "SQLiRuleSet-${Environment}"
        
        # Geographic restrictions for financial compliance (Priority 4)
        - Name: "GeoAllowRule"
          Priority: 4
          Statement:
            GeoMatchStatement:
              CountryCodes: !Ref AllowedCountries
          Action:
            Allow: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: !Sub "GeoAllowRule-${Environment}"
        
        # Block high-risk countries (Priority 5)
        - Name: "BlockHighRiskCountries"
          Priority: 5
          Statement:
            NotStatement:
              Statement:
                GeoMatchStatement:
                  CountryCodes: !Ref AllowedCountries
          Action:
            Block: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: !Sub "GeoBlockedRequests-${Environment}"
        
        # Anonymous IP blocking (Priority 6)
        - Name: "AWSManagedRulesAnonymousIpList"
          Priority: 6
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesAnonymousIpList
          OverrideAction:
            None: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: !Sub "AnonymousIpList-${Environment}"
        
        # Bot Control (Conditional - Priority 7)
        - !If
          - EnableBotControl
          - Name: "AWSManagedRulesBotControlRuleSet"
            Priority: 7
            Statement:
              ManagedRuleGroupStatement:
                VendorName: AWS
                Name: AWSManagedRulesBotControlRuleSet
                ManagedRuleGroupConfigs:
                  - AWSManagedRulesBotControlRuleSet:
                      InspectionLevel: "COMMON"
            OverrideAction:
              None: {}
            VisibilityConfig:
              SampledRequestsEnabled: true
              CloudWatchMetricsEnabled: true
              MetricName: !Sub "BotControlRuleSet-${Environment}"
          - !Ref AWS::NoValue
        
        # API Key Rate Limiting (Priority 8)
        - Name: "APIKeyRateLimit"
          Priority: 8
          Statement:
            RateBasedStatement:
              Limit: 1000  # 1000 requests per 5 minutes per API key
              AggregateKeyType: CUSTOM_KEYS
              CustomKeys:
                - Header:
                    Name: "x-api-key"
                    TextTransformations:
                      - Priority: 0
                        Type: NONE
          Action:
            Block: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: !Sub "APIKeyRateLimit-${Environment}"
        
        # Financial API Endpoint Protection (Priority 9)
        - Name: "FinancialEndpointProtection"
          Priority: 9
          Statement:
            AndStatement:
              Statements:
                - ByteMatchStatement:
                    SearchString: "/api/v1/payments"
                    FieldToMatch:
                      UriPath: {}
                    TextTransformations:
                      - Priority: 0
                        Type: LOWERCASE
                - NotStatement:
                    Statement:
                      ByteMatchStatement:
                        SearchString: "Bearer "
                        FieldToMatch:
                          SingleHeader:
                            Name: "authorization"
                        TextTransformations:
                          - Priority: 0
                            Type: LOWERCASE
          Action:
            Block: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: !Sub "UnauthenticatedPaymentAttempts-${Environment}"
        
        # Suspicious Financial Pattern Detection (Priority 10)
        - Name: "SuspiciousFinancialPatterns"
          Priority: 10
          Statement:
            OrStatement:
              Statements:
                # SQL injection in financial amounts
                - SqliMatchStatement:
                    FieldToMatch:
                      JsonBody:
                        MatchPattern:
                          IncludedPaths:
                            - "/amount"
                            - "/balance"
                            - "/transaction_amount"
                        MatchScope: VALUE
                    TextTransformations:
                      - Priority: 0
                        Type: URL_DECODE
                      - Priority: 1
                        Type: HTML_ENTITY_DECODE
                # XSS in transaction descriptions
                - XssMatchStatement:
                    FieldToMatch:
                      JsonBody:
                        MatchPattern:
                          IncludedPaths:
                            - "/description"
                            - "/notes"
                            - "/memo"
                        MatchScope: VALUE
                    TextTransformations:
                      - Priority: 0
                        Type: URL_DECODE
                      - Priority: 1
                        Type: HTML_ENTITY_DECODE
          Action:
            Block: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: !Sub "SuspiciousFinancialPatterns-${Environment}"
      
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: EconoVault
        - Key: Compliance
          Value: SOC2-PCI
        - Key: CostCenter
          Value: Security

  # Associate WAF with ALB
  WebACLAssociation:
    Type: AWS::WAFv2::WebACLAssociation
    Properties:
      ResourceArn: !Ref ALBArn
      WebACLArn: !GetAtt FinancialAPIWebACL.Arn

  # IP Set for trusted partners
  PartnerIPSet:
    Type: AWS::WAFv2::IPSet
    Properties:
      Name: !Sub "financial-partners-${Environment}"
      Description: "IP addresses of trusted financial partners"
      IPAddressVersion: IPV4
      Scope: REGIONAL
      Addresses: !Ref PartnerIPRanges

  # CloudWatch Log Group for WAF logs
  WAFLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/wafv2/econovault-${Environment}"
      RetentionInDays: 90
      KmsKeyId: !Ref WAFLogEncryptionKey

  # WAF Logging Configuration
  WAFLoggingConfiguration:
    Type: AWS::WAFv2::LoggingConfiguration
    Properties:
      ResourceArn: !GetAtt FinancialAPIWebACL.Arn
      LogDestinationConfigs:
        - !GetAtt WAFLogGroup.Arn
      LoggingFilter:
        DefaultBehavior: KEEP
        Filters:
          - Behavior: KEEP
            Conditions:
              - ActionCondition:
                  Action: BLOCK
            Requirement: MEETS_ANY
      RedactedFields:
        - Method: JSON
          JsonPath: "/password"
        - Method: JSON
          JsonPath: "/ssn"
        - Method: JSON
          JsonPath: "/credit_card"
        - SingleHeader:
            Name: "authorization"

  # KMS Key for WAF log encryption
  WAFLogEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: "KMS key for WAF log encryption"
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: 'kms:*'
            Resource: '*'
          - Sid: Allow WAF to use the key
            Effect: Allow
            Principal:
              Service: delivery.logs.amazonaws.com
            Action:
              - 'kms:Encrypt'
              - 'kms:Decrypt'
              - 'kms:ReEncrypt*'
              - 'kms:GenerateDataKey*'
              - 'kms:DescribeKey'
            Resource: '*'

  # CloudWatch Dashboard for WAF monitoring
  WAFDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: !Sub "EconoVault-WAF-${Environment}"
      DashboardBody: !Sub |
        {
          "widgets": [
            {
              "type": "metric",
              "properties": {
                "metrics": [
                  ["AWS/WAFV2", "AllowedRequests", "WebACL", "${FinancialAPIWebACL}", "Region", "${AWS::Region}", "Rule", "ALL"],
                  [".", "BlockedRequests", ".", ".", ".", ".", ".", "."]
                ],
                "period": 300,
                "stat": "Sum",
                "region": "${AWS::Region}",
                "title": "WAF Request Allow/Block Rate"
              }
            },
            {
              "type": "metric",
              "properties": {
                "metrics": [
                  ["AWS/WAFV2", "BlockedRequests", "WebACL", "${FinancialAPIWebACL}", "Region", "${AWS::Region}", "Rule", "RateLimitRule"],
                  [".", ".", ".", ".", ".", ".", ".", "SQLiRuleSet"],
                  [".", ".", ".", ".", ".", ".", ".", "CommonRuleSet"],
                  [".", ".", ".", ".", ".", ".", ".", "GeoAllowRule"]
                ],
                "period": 300,
                "stat": "Sum",
                "region": "${AWS::Region}",
                "title": "Blocked Requests by Rule"
              }
            }
          ]
        }

  # Security Alarms
  HighPrioritySecurityAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "EconoVault-HighPrioritySecurity-${Environment}"
      AlarmDescription: "High priority security events detected by WAF"
      MetricName: "BlockedRequests"
      Namespace: "AWS/WAFV2"
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 100
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: WebACL
          Value: !Ref FinancialAPIWebACL
        - Name: Region
          Value: !Ref AWS::Region
        - Name: Rule
          Value: "SQLiRuleSet"
      AlarmActions:
        - !Ref SecurityNotificationTopic

  # API Abuse Detection Alarm
  APIAbuseAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "EconoVault-APIAbuse-${Environment}"
      AlarmDescription: "Potential API abuse detected"
      MetricName: "BlockedRequests"
      Namespace: "AWS/WAFV2"
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 5
      Threshold: 50
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
      Dimensions:
        - Name: WebACL
          Value: !Ref FinancialAPIWebACL
        - Name: Region
          Value: !Ref AWS::Region
        - Name: Rule
          Value: "RateLimitRule"
      AlarmActions:
        - !Ref SecurityNotificationTopic

  # Security Notification SNS Topic
  SecurityNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub "econovault-security-${Environment}"
      DisplayName: "EconoVault Security Alerts"
      KmsMasterKeyId: !Ref SNSEncryptionKey

  # SNS Topic Policy for CloudWatch Alarms
  SecurityNotificationTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - !Ref SecurityNotificationTopic
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowCloudWatchAlarms
            Effect: Allow
            Principal:
              Service: cloudwatch.amazonaws.com
            Action: 'sns:Publish'
            Resource: !Ref SecurityNotificationTopic

  # KMS Key for SNS encryption
  SNSEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: "KMS key for security notifications"
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: 'kms:*'
            Resource: '*'

  # IAM Role for WAF logging
  WAFFirehoseRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: firehose.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonKinesisFirehoseServiceRole

Outputs:
  WebACLArn:
    Description: "ARN of the WAF Web ACL"
    Value: !GetAtt FinancialAPIWebACL.Arn
    Export:
      Name: !Sub "${AWS::StackName}-WebACLArn"
  
  WebACLId:
    Description: "ID of the WAF Web ACL"
    Value: !Ref FinancialAPIWebACL
    Export:
      Name: !Sub "${AWS::StackName}-WebACLId"
  
  SecurityTopicArn:
    Description: "ARN of the security notification topic"
    Value: !Ref SecurityNotificationTopic
    Export:
      Name: !Sub "${AWS::StackName}-SecurityTopicArn"
  
  DashboardURL:
    Description: "URL to the CloudWatch dashboard"
    Value: !Sub "https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=${WAFDashboard}"
    Export:
      Name: !Sub "${AWS::StackName}-DashboardURL"
  
  EstimatedMonthlyCost:
    Description: "Estimated monthly cost for WAF"
    Value: !If
      - IsAdvancedProtection
      - "$150-300"
      - "$25-80"
    Export:
      Name: !Sub "${AWS::StackName}-EstimatedCost"